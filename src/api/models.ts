/* tslint:disable */
//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v12.0.6.0 (NJsonSchema v9.13.2.0 (Newtonsoft.Json v11.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------
// ReSharper disable InconsistentNaming



export interface ElementBasicInfo {
    displayName: string;
    state: string;
    substanceColor: string;
    materialCategory: string;
}

export interface GameUpgrade {
    key: string;
    displayName: string;
    symbol: string;
}

export interface GeyserType {
    key: string;
    displayName: string;
}

export interface SeedBrowserFilter {
    seedNumber?: number | undefined;
    includeArchived?: boolean | undefined;
    rules?: SeedBrowserFilterRule[] | undefined;
    page: number;
    pageSize: number;
}

export interface SeedBrowserFilterRule {
    id: number;
    groupId: number;
    type: SeedBrowserFilterRuleType;
    object: string;
    comparator: SeedBrowserFilterRuleComparator;
    value: number;
}

export enum SeedBrowserFilterRuleType {
    Total_Output = "Total Output", 
    Geyser = "Geyser", 
    Planet = "Planet", 
}

export enum SeedBrowserFilterRuleComparator {
    At_least = "at least", 
    At_most = "at most", 
    Exactly = "exactly", 
}

export interface SeedList {
    totalEntries?: number | undefined;
    seeds?: SeedListItem[] | undefined;
}

export interface SeedListItem {
    creationDate: Date;
    seed: number;
    gameUpgrade: string;
    versionNumber: number;
    geyserQuantities: { [key: string] : number; };
    spaceDestinationQuantities: { [key: string] : number; };
    modVersion: number;
}

export interface Seed {
    creationDate: Date;
    seed: number;
    gameUpgrade: string;
    versionNumber: number;
    geysers: Geyser[];
    geyserQuantities: { [key: string] : number; };
    spaceDestinations: SpaceDestination[];
    spaceDestinationQuantities: { [key: string] : number; };
    biomeSizes: { [key: string] : number; };
    startingBiomeElementMasses: { [key: string] : number; };
    elementMasses: { [key: string] : number; };
    biomeMap: { [key: string] : string; };
    modVersion: number;
}

export interface Geyser {
    type: string;
    eruptionRate: number;
    activeDormancyPeriod: number;
    dormancyPeriod: number;
    eruptionPeriod: number;
    activeEruptionPeriod: number;
    calculatedOutput: number;
    posX?: number | undefined;
    posY?: number | undefined;
}

export interface SpaceDestination {
    type: string;
    distance: number;
}

export interface ModSeed {
    seed: number;
    versionNumber: number;
    geysers: ModGeyser[];
    spaceDestinations: ModSpaceDestination[];
    biomeSizes: { [key: string] : number; };
    elementMasses: { [key: string] : number; };
    startingBiomeElementMasses: { [key: string] : number; };
    biomeIndices: { [key: string] : string; };
    modVersion: number;
    fromAutomaticMod: boolean;
    apiKey: string;
}

export interface ModGeyser {
    geyserType: string;
    eruptionRate: number;
    activeDormancyPeriod: number;
    dormancyPeriod: number;
    eruptionPeriod: number;
    activeEruptionPeriod: number;
    posX: number;
    posY: number;
}

export interface ModSpaceDestination {
    destinationType: string;
    distance: number;
}

export interface AddInvalidSeedReportRequest {
    seedNumber?: number | undefined;
    gameVersion?: number | undefined;
}

export interface SpaceDestinationType {
    key: string;
    displayName: string;
}

export interface ErrorDetails {
    statusCode?: number | undefined;
    message?: string | undefined;
}